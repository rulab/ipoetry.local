<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
<title>ipoetry-стихотворение {{poetry.title}}</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"></meta>
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta name="Keywords" content="" />
<meta name="description" content="Читать стихотворение {{poetry.title}} в ipoetry" />
<meta name="robots" content="index,follow" />

    {% block stylesheets %}
        {% stylesheets 'bundles/ipoetry/css/screen.css'
        'bundles/ipoetry/css/style.css'
        'bundles/ipoetry/bootstrap/docs/dist/css/bootstrap.min.css'
        'bundles/ipoetry/bootstrap/docs/dist/css/bootstrap-theme.min.css'
        'bundles/ipoetry/js/jQuery-File-Upload-9.12.3/css/jquery.fileupload.css'
         filter='cssrewrite' %}
        <link rel="stylesheet" href="{{ asset_url }}" />     
        {% endstylesheets %}        
    {% endblock %}
</head>
<body id="body_container" style="position: absolute; width:100%;height:100%;max-width:100%;max-height:100%;"> <!--//onload="javascript:Dimension();" width: 1160px; height: 800px;visibility:hidden;-->

{% block title %}{{ poetry.title }}{% endblock %}

{% block body %}
    <article class="poetry">
        <header>
            <div class="date"><time datetime="{{ poetry.created|date('c') }}">{{ poetry.created|date('l, F j, Y') }}</time></div>
            <h2>{{ poetry.title }}</h2>
        </header>
        <img src="{{poetry.image}}" alt="{{ poetry.title }}" class="large" />
        <div style="clear:both"></div>
        <div class="like" style="display:inline;">Нравиться: {{poetry.like}}</div> <div class="dislike" style="display:inline;">Не нравиться: {{poetry.dislike}}</div>
        <div style="clear:both"></div>
        <button type="button" id="Poetrylikebtn" name="Poetrylikebtn" class="btn btn-sm btn-primary" style="display:inline;">Like</button>
        <button type="button" id="Poetrydislikebtn" name="Poetrydislikebtn" class="btn btn-sm btn-primary" style="display:inline;">Dislike</button>
        <div style="clear:both"></div>
        теги
        {% for tag in poetry.tags %}
            <div class="tags" dbid="{{tag.ipoetryTagsTagsId}}" style="display:inline;">{{tag.tagsText}}</div>
        {% endfor %}
        <div style="clear:both"></div>
        <div style="width:500px;height:300px;overflow-y: scroll;">
            <p>{{ poetry.body }}</p>
        </div>
    </article>
            <div style="clear:both;"></div>
            <h2 id="madeheader">{{MadeHeader}}</h2>
            {% for reposter in reposters %}
            <div id="repostersname">{{reposter.userName}}</div>
            <div id="reposterslastname">{{reposter.userLastname}}</div>
        <img src="{{reposter.userPhotoUrl}}" alt="{{reposter.userName}}{{reposter.userLastname}}" width="50" heiht="50" />
        <div id="reposterurl"><a href="{{reposter.reposterurl}}">Ссылка</a></div>
            {% endfor %}
            <div style="clear:both;"></div>

        <button id="PoetryRepostbtn" type="submit" class="btn btn-primary start">
                            <i class="glyphicon glyphicon-upload"></i>
                            <span id="repostbtntext">{{repostbtntext}}</span>
        </button>        
            <div style="clear:both;"></div>

        <h2 id="commentsheader">{{CommentsHeader}}</h2>
            <div id="commentscount">Кол-во комментариев {{CommentsCnt}}</div>
            <div style="clear:both;"></div>
            {% for CommentsBody in CommentsBodies %}
            <div commentid="{{CommentsBody.ipoetryUserBlogPostId}}" name="commentblock">
                <img src="{{CommentsBody.userPhotoUrl}}" width="50" height="50"/>
                <div name="commentblockiu">{{CommentsBody.userName}} {{CommentsBody.userLastname}}</div>
                <div name="commentblockbody">{{CommentsBody.ipoetryUserBlogPostText}}</div>
                <div class="like" style="display:inline;">Нравиться: {{CommentsBody.ipoetryBlogPostRatingValueUp}}</div> <div class="dislike" style="display:block;">Не нравиться: {{CommentsBody.ipoetryBlogPostRatingValueDown}}</div>
                <div>создан {{CommentsBody.ipoetryUserBlogPostCreatedAt|date('Y-m-d H:i:s')}}</div>
                <button type="button" parentcommentid="{{CommentsBody.ipoetryUserBlogPostParentId}}" commentid="{{CommentsBody.ipoetryUserBlogPostId}}" name="PoetryCommentLikebtn" class="btn btn-sm btn-primary" style="display:inline;">Like</button>
                <button type="button" parentcommentid="{{CommentsBody.ipoetryUserBlogPostParentId}}" commentid="{{CommentsBody.ipoetryUserBlogPostId}}" name="PoetryCommentDisLikebtn" class="btn btn-sm btn-primary" style="display:inline;">Dislike</button>

                <button type="button" parentcommentid="{{CommentsBody.ipoetryUserBlogPostParentId}}" commentid="{{CommentsBody.ipoetryUserBlogPostId}}" name="PoetryAddCommentCommentbtn" class="btn btn-sm btn-primary" style="display:inline;">Комментировать</button>
            </div>
            {% endfor %}
            <button id="getusercommentsbtn" type="submit" class="btn btn-primary start">
                <i class="glyphicon glyphicon-upload"></i>
                <span>Get user feed info</span>
            </button>
            <input id="datapartnum" type="hidden" value="1"/>

            <div id="addcommentblock">
            <textarea id="CommentText" cols="70" rows="5" style="display:block;"></textarea>
            <button type="button" id="PoetryAddCommentbtn" class="btn btn-sm btn-primary" style="display:inline;">Отправить</button>
            </div>
{% endblock %}
{% block javascripts %}
{% javascripts '@IpoetryBundle/Resources/public/js/jquery-1.11.0.min.js'
'@IpoetryBundle/Resources/public/bootstrap/dist/js/bootstrap.min.js'
'@IpoetryBundle/Resources/public/js/w_load.js'
'@IpoetryBundle/Resources/public/bootstrap/docs/assets/js/ie-emulation-modes-warning.js'
'@IpoetryBundle/Resources/public/bootstrap/docs/assets/js/ie10-viewport-bug-workaround.js'
%}
<script type="text/javascript" src="{{ asset_url }}"></script>
{% endjavascripts %}
{% endblock %}
<script type="text/javascript">
    function checkCommentsAvailable(){
        //делаем запрос о наличии у стихотворения комментариев
        //шлем AJAX
        //ajaxdata='login_json={"type":"get_poetry_comments_info","poetry":"{{app.request.attributes.get('_route_params')['poetry']}}","user":"{{app.request.attributes.get('_route_params')['user']}}","datapart":'+$('#datapartnum').val()+'}';
        datapartobj=new Object();
        datapartobj.datapart=$('#datapartnum').val();
        ajaxdata=JSON.stringify({type:"get_poetry_comments_info",poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}",datapart:$('#datapartnum').val()});
        console.log(ajaxdata);
        url='{{ path('IpoetryBundle_unewsfeedentityajax') }}';
        type='post';
        dataType='json';
        onsuccess=function(json) {
            console.log(json['result']);
            console.log(json['comments']);
            if (json['result']>0) {
                console.log($('#datapartnum').val());
                $( '<p>'+json['comments']+'</p>' ).insertBefore('#getusercommentsbtn');
                console.log('AJAX_user_coments_available result='+json['result']);
                $('#datapartnum').val((Number($('#datapartnum').val())+1));
                //location.href='{{ path('IpoetryBundle_uroom') }}';
            }
        };
        onerror=function(jqXHR, textStatus, errorThrown) {
            console.log('error AJAX_user_coments_available ' + textStatus);
        };
        ajaxprototype(ajaxdata,url,type,dataType,onsuccess,onerror);
    }
    function PoetryRepostToOwnFeed(){
        //делаем запрос на включение стиха в свою ленту
        //шлем AJAX
        ajaxdata=JSON.stringify({type:"poetryreposttoownfeed",poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}"});
        console.log(ajaxdata);
        url='{{ path('IpoetryBundle_unewsfeedentityajax') }}';
        type='post';
        dataType='json';
        onsuccess=function(json) {
            console.log(json['result']);
            if (json['result']>0) {
                console.log('AJAX_PoetryRepostToOwnFeed result='+json['result']);
            }
        };
        onerror=function(jqXHR, textStatus, errorThrown) {
            console.log('error AJAX_PoetryRepostToOwnFeed result ' + textStatus);
        };
        ajaxprototype(ajaxdata,url,type,dataType,onsuccess,onerror);

    }
    function PoetryRepostAllowed(){
        //делаем запрос если пользователь читает свой стих то
        //делаем кнопку репоста неактивной
        //шлем AJAX
        ajaxdata=JSON.stringify({type:"poetryrepostallowed",poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}"});
        console.log(ajaxdata);
        url='{{ path('IpoetryBundle_unewsfeedentityajax') }}';
        type='post';
        dataType='json';
        onsuccess=function(json) {
            console.log(json['result']);
            if (json['result']>0) {
                $('#PoetryRepostbtn').fadeOut();
            } else {
                console.log('AJAX_PoetryRepostAllowed result='+json['result']);
            }
        };
        onerror=function(jqXHR, textStatus, errorThrown) {
            console.log('error AJAX_PoetryRepostAllowed result ' + textStatus);
        };
        ajaxprototype(ajaxdata,url,type,dataType,onsuccess,onerror);

    }
    function PoetryLike(userid,poetryid,up){
        //делаем запрос если пользователь ставит like
        //шлем AJAX
        ajaxdata=JSON.stringify({type:"poetrylikerequest",poetry:poetryid,user:userid,updown:up});
        console.log(ajaxdata);
        url='{{ path('IpoetryBundle_unewsfeedentityajax') }}';
        type='post';
        dataType='json';
        onsuccess=function(json) {
            console.log(json['result']);
            if (json['result']>0) {
                console.log('AJAX_PoetryLike result='+json['result']);
            }
        };
        onerror=function(jqXHR, textStatus, errorThrown) {
            console.log('error AJAX_PoetryLike result ' + textStatus);
        };
        ajaxprototype(ajaxdata,url,type,dataType,onsuccess,onerror);
        
    };
    $(document).ready(function () {
        {% block documentReady %}
            PoetryRepostAllowed();
            //комментарий к стиху
            $('#PoetryAddCommentbtn').on('click',function () {
                var oReq = new XMLHttpRequest();
                oReq.onreadystatechange = function() {
                    //console.log(JSON.parse(oReq.responseText));
                    if (oReq.readyState == 4 && oReq.status == 200) {
                    }
                };
                //console.log($('#UserPoetryCreation_poetry').val());
                //шлем blob тест комментария
                oReq.open("POST", "{{ path('IpoetryBundle_unewsfeedentityajax') }}", false);
                var blob = new Blob([$('#CommentText').val()], {type: 'text/plain'});
                console.log(blob);
                oReq.setRequestHeader("Content-Type", "text/plain");
                oReq.send(blob);
                //return 1;
                //шлем доппараметры как json
                //отправляем доп инфо по стихотворению
                oReq.open("POST", "{{ path('IpoetryBundle_unewsfeedentityajax') }}",true);
                oReq.setRequestHeader("Content-Type", "application/json");
                console.log("login_json="+JSON.stringify({type:"add_poetry_comment", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}"}));
                //"login_json={type:"add_poetry_comment", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}"}'
                //JSON.stringify({type:"add_poetry_comment", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}"})
                oReq.send(JSON.stringify({type:"add_poetry_comment", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}"}));
            });
            //комментарий к комментарию
            $('button[name="PoetryAddCommentCommentbtn"]').each(function (index){
                $(this).on('click',function () {
                    console.log($(this).attr('commentid'));

                    var oReq = new XMLHttpRequest();
                    oReq.onreadystatechange = function() {
                        //console.log(JSON.parse(oReq.responseText));
                        if (oReq.readyState == 4 && oReq.status == 200) {
                        }
                    };
                    //console.log($('#UserPoetryCreation_poetry').val());
                    //шлем blob тест комментария
                    oReq.open("POST", "{{ path('IpoetryBundle_unewsfeedentityajax') }}", false);
                    var blob = new Blob([$('#CommentText').val()], {type: 'text/plain'});
                    console.log(blob);
                    oReq.setRequestHeader("Content-Type", "text/plain");
                    oReq.send(blob);
                    //return 1;
                    //шлем доппараметры как json
                    //отправляем доп инфо по стихотворению
                    oReq.open("POST", "{{ path('IpoetryBundle_unewsfeedentityajax') }}",true);
                    oReq.setRequestHeader("Content-Type", "application/json");
                    console.log("login_json="+JSON.stringify({type:"add_poetry_comment", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}",parent:$(this).attr('commentid')}));
                    //"login_json={type:"add_poetry_comment", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}"}'
                    //JSON.stringify({type:"add_poetry_comment", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}"})
                    oReq.send(JSON.stringify({type:"add_poetry_comment", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}",parent:$(this).attr('commentid')}));
                });
            });
            //like к комментарию
            $('button[name="PoetryCommentLikebtn"]').each(function (index){
                $(this).on('click',function () {
                    console.log($(this).attr('commentid'));

                    var oReq = new XMLHttpRequest();
                    oReq.onreadystatechange = function() {
                        //console.log(JSON.parse(oReq.responseText));
                        if (oReq.readyState == 4 && oReq.status == 200) {
                        }
                    };
                    //шлем доппараметры как json
                    //отправляем like к комментарию
                    oReq.open("POST", "{{ path('IpoetryBundle_unewsfeedentityajax') }}",true);
                    oReq.setRequestHeader("Content-Type", "application/json");
                    console.log("login_json="+JSON.stringify({type:"commentlikerequest", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}",commentid:$(this).attr('commentid'),updown:'up'}));
                    oReq.send(JSON.stringify({type:"commentlikerequest", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}",commentid:$(this).attr('commentid'),updown:'up'}));
                });
            });
            //dislike к коментарию
            $('button[name="PoetryCommentDisLikebtn"]').each(function (index){
                $(this).on('click',function () {
                    console.log($(this).attr('commentid'));

                    var oReq = new XMLHttpRequest();
                    oReq.onreadystatechange = function() {
                        //console.log(JSON.parse(oReq.responseText));
                        if (oReq.readyState == 4 && oReq.status == 200) {
                        }
                    };
                    //шлем доппараметры как json
                    //отправляем like к комментарию
                    oReq.open("POST", "{{ path('IpoetryBundle_unewsfeedentityajax') }}",true);
                    oReq.setRequestHeader("Content-Type", "application/json");
                    console.log("login_json="+JSON.stringify({type:"commentlikerequest", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}",commentid:$(this).attr('commentid'),updown:'down'}));
                    oReq.send(JSON.stringify({type:"commentlikerequest", poetry:"{{app.request.attributes.get('_route_params')['poetry']}}",user:"{{app.request.attributes.get('_route_params')['user']}}",commentid:$(this).attr('commentid'),updown:'down'}));
                });
            });

            $('#getusercommentsbtn').on('click',function (event){
                event = event || window.event;

                  if (event.preventDefault) { // если метод существует
                    event.preventDefault(); // то вызвать его
                  } else { // иначе вариант IE8-:
                    event.returnValue = false;
                  }
                checkCommentsAvailable();
            });
            $('#PoetryRepostbtn').on('click',function (event){
                event = event || window.event;

                  if (event.preventDefault) { // если метод существует
                    event.preventDefault(); // то вызвать его
                  } else { // иначе вариант IE8-:
                    event.returnValue = false;
                  }
                  PoetryRepostToOwnFeed();
            });
            $('#Poetrylikebtn').on('click',function (event){
                event = event || window.event;

                  if (event.preventDefault) { // если метод существует
                    event.preventDefault(); // то вызвать его
                  } else { // иначе вариант IE8-:
                    event.returnValue = false;
                  }
                  PoetryLike({{app.request.attributes.get('_route_params')['user']}},
                  {{app.request.attributes.get('_route_params')['poetry']}},'up');
            });
            $('#Poetrydislikebtn').on('click',function (event){
                event = event || window.event;

                  if (event.preventDefault) { // если метод существует
                    event.preventDefault(); // то вызвать его
                  } else { // иначе вариант IE8-:
                    event.returnValue = false;
                  }
                  PoetryLike({{app.request.attributes.get('_route_params')['user']}},
                  {{app.request.attributes.get('_route_params')['poetry']}},'down');
            });

        {% endblock documentReady %}
    });
</script>
</body>
</html>